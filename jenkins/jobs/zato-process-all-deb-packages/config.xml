<?xml version='1.0' encoding='UTF-8'?>
<matrix-project plugin="matrix-project@1.4">
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <EnvInjectJobProperty plugin="envinject@1.90">
      <info>
        <groovyScriptContent>def suites = [ master: &quot;dev&quot;, &apos;support&apos;: &quot;stable&quot;, u: &quot;u&quot; ]

def suite = suites[BRANCH]

def deb_extension = &quot;deb&quot;
def rpm_extension = &quot;rpm&quot;

def parameters = [ 

SUITE: suite, 
DEB_EXTENSION: deb_extension,
RPM_EXTENSION: rpm_extension

]</groovyScriptContent>
        <loadFilesFromMaster>false</loadFilesFromMaster>
      </info>
      <on>true</on>
      <keepJenkinsSystemVariables>true</keepJenkinsSystemVariables>
      <keepBuildVariables>true</keepBuildVariables>
      <overrideBuildParameters>false</overrideBuildParameters>
      <contributors/>
    </EnvInjectJobProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <axes>
    <hudson.matrix.TextAxis>
      <name>OPERATING_SYSTEM</name>
      <values>
        <string>debian</string>
        <string>ubuntu</string>
      </values>
    </hudson.matrix.TextAxis>
    <hudson.matrix.TextAxis>
      <name>CODENAME</name>
      <values>
        <string>wheezy</string>
        <string>precise</string>
        <string>trusty</string>
      </values>
    </hudson.matrix.TextAxis>
    <hudson.matrix.TextAxis>
      <name>ARCHITECTURE</name>
      <values>
        <string>i368</string>
        <string>amd64</string>
      </values>
    </hudson.matrix.TextAxis>
    <hudson.matrix.TextAxis>
      <name>PACKAGE_TYPE</name>
      <values>
        <string>deb</string>
      </values>
    </hudson.matrix.TextAxis>
  </axes>
  <combinationFilter>(OPERATING_SYSTEM==&quot;debian&quot;) &amp;&amp; (CODENAME==&quot;wheezy&quot;) || (OPERATING_SYSTEM==&quot;ubuntu&quot;) &amp;&amp; (CODENAME==&quot;precise&quot;) ||  (OPERATING_SYSTEM==&quot;ubuntu&quot;) &amp;&amp; (CODENAME==&quot;trusty&quot;)</combinationFilter>
  <builders>
    <hudson.plugins.parameterizedtrigger.TriggerBuilder plugin="parameterized-trigger@2.25">
      <configs>
        <hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
          <configs>
            <hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
              <properties>DISTRIBUTION=${DISTRIBUTION}
BRANCH=${BRANCH}
RELEASE_VERSION=${RELEASE_VERSION}
PACKAGE_NUMBER=${PACKAGE_NUMBER}
CLIENT=${CLIENT}
CLIENT_PATH=/${CLIENT}
SUITE=${SUITE}
OPERATING_SYSTEM=${OPERATING_SYSTEM}
CODENAME=${CODENAME}
ARCHITECTURE=${ARCHITECTURE}
META_INSTALLER_PACKAGE_DIR=${META_INSTALLER_PACKAGE_DIR}
ZATO_LOCAL_REPO_BASE_DIR=${ZATO_LOCAL_REPO_BASE_DIR}
ZATO_REMOTE_REPO_BASE_DIR=/opt/repo
ZATO_REMOTE_REPO_HOSTNAME=centosrepo
ZATO_REMOTE_REPO_USERNAME=rafal</properties>
            </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
          </configs>
          <projects>zato-add-deb-packages-to-repo</projects>
          <condition>ALWAYS</condition>
          <triggerWithNoParameters>false</triggerWithNoParameters>
          <buildAllNodesWithLabel>false</buildAllNodesWithLabel>
        </hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
      </configs>
    </hudson.plugins.parameterizedtrigger.TriggerBuilder>
  </builders>
  <publishers/>
  <buildWrappers>
    <EnvInjectBuildWrapper plugin="envinject@1.90">
      <info>
        <propertiesContent>META_INSTALLER_PACKAGE_DIR=/home/rafal/repos/zato-build/meta/output
ZATO_LOCAL_REPO_BASE_DIR=/opt/repo</propertiesContent>
        <groovyScriptContent>def distributions = [

&quot;debian-7-32&quot;: [operating_system: &quot;debian&quot;, codename: &quot;wheezy&quot;, architecture: &quot;i386&quot;, package_type: &quot;deb&quot;],
&quot;debian-7-64&quot;: [operating_system: &quot;debian&quot;, codename: &quot;wheezy&quot;, architecture: &quot;amd64&quot;, package_type: &quot;deb&quot;],
&quot;redhat-6-32&quot;: [operating_system: &quot;rhel&quot;, codename: &quot;el6&quot;, architecture: &quot;i386&quot;, package_type: &quot;rpm&quot;],
&quot;redhat-6-64&quot;: [operating_system: &quot;rhel&quot;, codename: &quot;el6&quot;, architecture: &quot;x86_64&quot;, package_type: &quot;rpm&quot;],
&quot;redhat-7-32&quot;: [operating_system: &quot;rhel&quot;, codename: &quot;el7&quot;, architecture: &quot;i386&quot;, package_type: &quot;rpm&quot;],
&quot;redhat-7-64&quot;: [operating_system: &quot;rhel&quot;, codename: &quot;el7&quot;, architecture: &quot;x86_64&quot;, package_type: &quot;rpm&quot;],
&quot;ubuntu-12.04-32&quot;: [operating_system: &quot;ubuntu&quot;, codename: &quot;precise&quot;, architecture: &quot;i386&quot;, package_type: &quot;deb&quot;],
&quot;ubuntu-12.04-64&quot;: [operating_system: &quot;ubuntu&quot;, codename: &quot;precise&quot;, architecture: &quot;amd64&quot;, package_type: &quot;deb&quot;],
&quot;ubuntu-14.04-32&quot;: [operating_system: &quot;ubuntu&quot;, codename: &quot;trusty&quot;, architecture: &quot;i386&quot;, package_type: &quot;deb&quot;],
&quot;ubuntu-14.04-64&quot;: [operating_system: &quot;ubuntu&quot;, codename: &quot;trusty&quot;, architecture: &quot;amd64&quot;, package_type: &quot;deb&quot;]

]

for ( distribution in distributions ) {

    def value = distribution.value;
       
    if ( value.operating_system==OPERATING_SYSTEM &amp;&amp; value.codename==CODENAME &amp;&amp; value.architecture==ARCHITECTURE ) {

        def map = [DISTRIBUTION: distribution.key];

        return map

    }
}</groovyScriptContent>
        <loadFilesFromMaster>false</loadFilesFromMaster>
      </info>
    </EnvInjectBuildWrapper>
  </buildWrappers>
  <executionStrategy class="hudson.matrix.DefaultMatrixExecutionStrategyImpl">
    <runSequentially>true</runSequentially>
  </executionStrategy>
</matrix-project>