<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Adds .deb packages to a local repo and updates it with reprepro.</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.ChoiceParameterDefinition>
          <name>DISTRIBUTION</name>
          <description>Choose a Linux distribution to build a package for. Alternatively, you can choose &quot;all&quot; to build packages for all distributions in a single operation.</description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>all</string>
              <string>debian-7-32</string>
              <string>debian-7-64</string>
              <string>redhat-6-32</string>
              <string>redhat-6-64</string>
              <string>ubuntu-12.04-32</string>
              <string>ubuntu-12.04-64</string>
              <string>ubuntu-14.04-32</string>
              <string>ubuntu-14.04-64</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>BRANCH</name>
          <description>Choose a Zato branch</description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>master</string>
              <string>support/1.0</string>
              <string>support/1.1</string>
              <string>u/foobar</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <EnvInjectJobProperty plugin="envinject@1.90">
      <info>
        <groovyScriptContent>import java.util.regex.Matcher
import java.util.regex.Pattern

def branch = BRANCH
def suites = [ master: &quot;dev&quot;, &apos;support/1.0&apos;: &quot;stable/1.0&quot;, &apos;support/1.1&apos;: &quot;stable/1.1&quot;, u: &quot;u&quot; ]
def suite = [ SUITE: suites[BRANCH] ]

def operating_system = ~/\b[a-z]+\b/
def match1 = (DISTRIBUTION =~ operating_system)
def os = [ OS: match1]

def operating_system_version = ~/(\b[a-z]+\b)[-](\b[0-9][0-9]?\b)[.]?(\b[0-9][0-9]?\b)?/
def match2 = (DISTRIBUTION =~ operating_system_version)
def os_v = [ OS_V: match2 ]

println match1[0]
println match2[0][0]</groovyScriptContent>
        <loadFilesFromMaster>false</loadFilesFromMaster>
      </info>
      <on>true</on>
      <keepJenkinsSystemVariables>true</keepJenkinsSystemVariables>
      <keepBuildVariables>true</keepBuildVariables>
      <overrideBuildParameters>false</overrideBuildParameters>
      <contributors/>
    </EnvInjectJobProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <jenkins.triggers.ReverseBuildTrigger>
      <spec></spec>
      <upstreamProjects>zato-build-packages,</upstreamProjects>
      <threshold>
        <name>SUCCESS</name>
        <ordinal>0</ordinal>
        <color>BLUE</color>
        <completeBuild>true</completeBuild>
      </threshold>
    </jenkins.triggers.ReverseBuildTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders/>
  <publishers/>
  <buildWrappers/>
</project>