<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>This job adds deb packages to Zato repository in two steps:&#xd;
&#xd;
1. It uses &apos;reprepro includedeb&quot; command to update local Zato repository.&#xd;
&#xd;
2. It uses &apos;rsync&apos; command to syncronize the local Zato repository with official, remote Zato repository on CentOS.</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <com.cloudbees.plugins.credentials.CredentialsParameterDefinition plugin="credentials@1.18">
          <name>LOGIN_CENTOS_REPO</name>
          <description></description>
          <defaultValue>d8a9c7c2-7473-4c15-836c-7df7c5c28175</defaultValue>
          <credentialType>com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl</credentialType>
          <required>true</required>
        </com.cloudbees.plugins.credentials.CredentialsParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder plugin="conditional-buildstep@1.3.3">
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$DontRun" plugin="run-condition@1.0"/>
      <runCondition class="org.jenkins_ci.plugins.run_condition.logic.Or" plugin="run-condition@1.0">
        <conditions>
          <org.jenkins__ci.plugins.run__condition.logic.ConditionContainer>
            <condition class="org.jenkins_ci.plugins.run_condition.logic.And">
              <conditions>
                <org.jenkins__ci.plugins.run__condition.logic.ConditionContainer>
                  <condition class="org.jenkins_ci.plugins.run_condition.logic.Not">
                    <condition class="org.jenkins_ci.plugins.run_condition.core.StringsMatchCondition">
                      <arg1>${ENV,var=&quot;CLIENT_PATH&quot;}</arg1>
                      <arg2></arg2>
                      <ignoreCase>false</ignoreCase>
                    </condition>
                  </condition>
                </org.jenkins__ci.plugins.run__condition.logic.ConditionContainer>
                <org.jenkins__ci.plugins.run__condition.logic.ConditionContainer>
                  <condition class="org.jenkins_ci.plugins.run_condition.core.StringsMatchCondition">
                    <arg1>${ENV,var=&quot;OPERATING_SYSTEM&quot;}</arg1>
                    <arg2>debian</arg2>
                    <ignoreCase>false</ignoreCase>
                  </condition>
                </org.jenkins__ci.plugins.run__condition.logic.ConditionContainer>
              </conditions>
            </condition>
          </org.jenkins__ci.plugins.run__condition.logic.ConditionContainer>
          <org.jenkins__ci.plugins.run__condition.logic.ConditionContainer>
            <condition class="org.jenkins_ci.plugins.run_condition.logic.And">
              <conditions>
                <org.jenkins__ci.plugins.run__condition.logic.ConditionContainer>
                  <condition class="org.jenkins_ci.plugins.run_condition.logic.Not">
                    <condition class="org.jenkins_ci.plugins.run_condition.core.StringsMatchCondition">
                      <arg1>${ENV,var=&quot;CLIENT_PATH&quot;}</arg1>
                      <arg2></arg2>
                      <ignoreCase>false</ignoreCase>
                    </condition>
                  </condition>
                </org.jenkins__ci.plugins.run__condition.logic.ConditionContainer>
                <org.jenkins__ci.plugins.run__condition.logic.ConditionContainer>
                  <condition class="org.jenkins_ci.plugins.run_condition.core.StringsMatchCondition">
                    <arg1>${ENV,var=&quot;OPERATING_SYSTEM&quot;}</arg1>
                    <arg2>ubuntu</arg2>
                    <ignoreCase>false</ignoreCase>
                  </condition>
                </org.jenkins__ci.plugins.run__condition.logic.ConditionContainer>
              </conditions>
            </condition>
          </org.jenkins__ci.plugins.run__condition.logic.ConditionContainer>
        </conditions>
      </runCondition>
      <conditionalbuilders>
        <hudson.tasks.Shell>
          <command>mkdir -p ${ZATO_LOCAL_REPO_BASE_DIR}/${REPOSITORY}${CLIENT_PATH}/${OPERATING_SYSTEM}/</command>
        </hudson.tasks.Shell>
        <hudson.tasks.Shell>
          <command>cp -r /opt/general_conf/${OPERATING_SYSTEM}/conf ${ZATO_LOCAL_REPO_BASE_DIR}/${REPOSITORY}${CLIENT_PATH}/${OPERATING_SYSTEM}/</command>
        </hudson.tasks.Shell>
        <hudson.tasks.Shell>
          <command>ssh ${ZATO_REMOTE_REPO_USERNAME}@${ZATO_REMOTE_REPO_HOSTNAME} &quot;mkdir -p $ZATO_REMOTE_REPO_BASE_DIR/u$CLIENT_PATH/$OPERATING_SYSTEM&quot;</command>
        </hudson.tasks.Shell>
      </conditionalbuilders>
    </org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder>
    <hudson.tasks.Shell>
      <command>reprepro -b ${ZATO_LOCAL_REPO_BASE_DIR}/${REPOSITORY}${CLIENT_PATH}/${OPERATING_SYSTEM} includedeb ${CODENAME} ${META_INSTALLER_PACKAGE_DIR}/${DISTRIBUTION}/zato-${RELEASE_VERSION}-${PACKAGE_NUMBER}_${ARCHITECTURE}-${CODENAME}.deb</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>rsync -az --delete -e ssh ${ZATO_LOCAL_REPO_BASE_DIR}/${REPOSITORY}${CLIENT_PATH}/${OPERATING_SYSTEM}/ ${ZATO_REMOTE_REPO_USERNAME}@${ZATO_REMOTE_REPO_HOSTNAME}:${ZATO_REMOTE_REPO_BASE_DIR}/${REPOSITORY}${CLIENT_PATH}/${OPERATING_SYSTEM}</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>