<?xml version='1.0' encoding='UTF-8'?>
<matrix-project plugin="matrix-project@1.4">
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <com.cloudbees.plugins.credentials.CredentialsParameterDefinition plugin="credentials@1.18">
          <name>REPO_CREDENTIALS</name>
          <description></description>
          <defaultValue>3b365d39-14a7-46c1-b5c3-d20ec0c428c8</defaultValue>
          <credentialType>com.cloudbees.jenkins.plugins.sshcredentials.impl.BasicSSHUserPrivateKey</credentialType>
          <required>true</required>
        </com.cloudbees.plugins.credentials.CredentialsParameterDefinition>
        <com.cloudbees.plugins.credentials.CredentialsParameterDefinition plugin="credentials@1.18">
          <name>USER_CREDENTIALS</name>
          <description></description>
          <defaultValue>d8a9c7c2-7473-4c15-836c-7df7c5c28175</defaultValue>
          <credentialType>com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl</credentialType>
          <required>true</required>
        </com.cloudbees.plugins.credentials.CredentialsParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <EnvInjectJobProperty plugin="envinject@1.90">
      <info>
        <groovyScriptContent>def deb_extension = &quot;deb&quot;
def rpm_extension = &quot;rpm&quot;

def parameters = [ 

SUITE: suite, 
DEB_EXTENSION: deb_extension,
RPM_EXTENSION: rpm_extension

]</groovyScriptContent>
        <loadFilesFromMaster>false</loadFilesFromMaster>
      </info>
      <on>true</on>
      <keepJenkinsSystemVariables>true</keepJenkinsSystemVariables>
      <keepBuildVariables>true</keepBuildVariables>
      <overrideBuildParameters>false</overrideBuildParameters>
      <contributors/>
    </EnvInjectJobProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <axes>
    <hudson.matrix.TextAxis>
      <name>OPERATING_SYSTEM</name>
      <values>
        <string>ubuntu</string>
      </values>
    </hudson.matrix.TextAxis>
    <hudson.matrix.TextAxis>
      <name>DISTRIBUTION</name>
      <values>
        <string>ubuntu-12.04-32</string>
        <string>ubuntu-12.04-64</string>
        <string>ubuntu-14.04-32</string>
        <string>ubuntu-14.04-64</string>
      </values>
    </hudson.matrix.TextAxis>
    <hudson.matrix.TextAxis>
      <name>CODENAME</name>
      <values>
        <string>precise</string>
        <string>trusty</string>
      </values>
    </hudson.matrix.TextAxis>
    <hudson.matrix.TextAxis>
      <name>ARCHITECTURE</name>
      <values>
        <string>i386</string>
        <string>amd64</string>
      </values>
    </hudson.matrix.TextAxis>
    <hudson.matrix.TextAxis>
      <name>PACKAGE_TYPE</name>
      <values>
        <string>deb</string>
      </values>
    </hudson.matrix.TextAxis>
  </axes>
  <combinationFilter>(DISTRIBUTION==&quot;ubuntu-12.04-32&quot; &amp;&amp; CODENAME==&quot;precise&quot; &amp;&amp; ARCHITECTURE==&quot;i386&quot;) || (DISTRIBUTION==&quot;ubuntu-12.04-64&quot; &amp;&amp; CODENAME==&quot;precise&quot; &amp;&amp; ARCHITECTURE==&quot;amd64&quot;) || (DISTRIBUTION==&quot;ubuntu-14.04-32&quot; &amp;&amp; CODENAME==&quot;trusty&quot; &amp;&amp; ARCHITECTURE==&quot;i386&quot;) || (DISTRIBUTION==&quot;ubuntu-14.04-64&quot; &amp;&amp; CODENAME==&quot;trusty&quot; &amp;&amp; ARCHITECTURE==&quot;amd64&quot;)</combinationFilter>
  <builders>
    <org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder plugin="conditional-buildstep@1.3.3">
      <condition class="org.jenkins_ci.plugins.run_condition.logic.Not" plugin="run-condition@1.0">
        <condition class="org.jenkins_ci.plugins.run_condition.core.StringsMatchCondition">
          <arg1>${ENV,var=&quot;CLIENT&quot;}</arg1>
          <arg2>&quot;&quot;</arg2>
          <ignoreCase>false</ignoreCase>
        </condition>
      </condition>
      <buildStep class="hudson.tasks.Shell">
        <command>ssh ${ZATO_REMOTE_REPO_USERNAME}@${ZATO_REMOTE_REPO_HOSTNAME} &quot;mkdir -p $ZATO_REMOTE_REPO_BASE_DIR/u$CLIENT_PATH/$OPERATING_SYSTEM&quot;</command>
      </buildStep>
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$DontRun" plugin="run-condition@1.0"/>
    </org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
    <hudson.tasks.Shell>
      <command>reprepro -b ${ZATO_LOCAL_REPO_BASE_DIR}/${REPOSITORY}${CLIENT_PATH}/${OPERATING_SYSTEM} includedeb ${CODENAME} ${META_INSTALLER_PACKAGE_DIR}/${DISTRIBUTION}/zato-${RELEASE_VERSION}-${PACKAGE_NUMBER}_${ARCHITECTURE}-${CODENAME}.deb</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>rsync -az --delete -e ssh ${ZATO_LOCAL_REPO_BASE_DIR}/${REPOSITORY}${CLIENT_PATH}/${OPERATING_SYSTEM}/ ${ZATO_REMOTE_REPO_USERNAME}@${ZATO_REMOTE_REPO_HOSTNAME}:${ZATO_REMOTE_REPO_BASE_DIR}/${REPOSITORY}${CLIENT_PATH}/${OPERATING_SYSTEM}</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <EnvInjectBuildWrapper plugin="envinject@1.90">
      <info>
        <propertiesContent>META_INSTALLER_PACKAGE_DIR=/home/rafal/repos/zato-build/meta/output
ZATO_LOCAL_REPO_BASE_DIR=/opt/repo
ZATO_REMOTE_REPO_BASE_DIR=/opt/repo
ZATO_REMOTE_REPO_USERNAME=rafal
ZATO_REMOTE_REPO_HOSTNAME=centosrepo</propertiesContent>
        <loadFilesFromMaster>false</loadFilesFromMaster>
      </info>
    </EnvInjectBuildWrapper>
  </buildWrappers>
  <executionStrategy class="hudson.matrix.DefaultMatrixExecutionStrategyImpl">
    <runSequentially>true</runSequentially>
  </executionStrategy>
</matrix-project>