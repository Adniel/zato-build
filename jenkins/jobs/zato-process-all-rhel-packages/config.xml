<?xml version='1.0' encoding='UTF-8'?>
<matrix-project plugin="matrix-project@1.4">
  <actions/>
  <description>This job is a multi-configuration project.&#xd;
&#xd;
It performs specified build steps (which in this job are the same as in zato-add-deb-packages-to-repo job) for each defined configuration of input parameters. Number of configuration sets is the same as the number of Linux RHEL distributions supported by Zato team.&#xd;
&#xd;
Those parameters are provided by an user when launching zato-build-packages, and then zato-pass-parameters-from-build jobs.&#xd;
&#xd;
Additionally, user has to provide values for few more parameters in section &quot;Build Environment&quot;.</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <EnvInjectJobProperty plugin="envinject@1.90">
      <info>
        <groovyScriptContent>def deb_extension = &quot;deb&quot;
def rpm_extension = &quot;rpm&quot;

def parameters = [ 

DEB_EXTENSION: deb_extension,
RPM_EXTENSION: rpm_extension

]</groovyScriptContent>
        <loadFilesFromMaster>false</loadFilesFromMaster>
      </info>
      <on>true</on>
      <keepJenkinsSystemVariables>true</keepJenkinsSystemVariables>
      <keepBuildVariables>true</keepBuildVariables>
      <overrideBuildParameters>false</overrideBuildParameters>
      <contributors/>
    </EnvInjectJobProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>true</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <axes>
    <hudson.matrix.TextAxis>
      <name>OPERATING_SYSTEM</name>
      <values>
        <string>rhel</string>
      </values>
    </hudson.matrix.TextAxis>
    <hudson.matrix.TextAxis>
      <name>DISTRIBUTION</name>
      <values>
        <string>redhat-6-32</string>
        <string>redhat-6-64</string>
        <string>redhat-7-64</string>
      </values>
    </hudson.matrix.TextAxis>
    <hudson.matrix.TextAxis>
      <name>CODENAME</name>
      <values>
        <string>el6</string>
        <string>el7</string>
      </values>
    </hudson.matrix.TextAxis>
    <hudson.matrix.TextAxis>
      <name>ARCHITECTURE</name>
      <values>
        <string>i386</string>
        <string>x86_64</string>
      </values>
    </hudson.matrix.TextAxis>
    <hudson.matrix.TextAxis>
      <name>PACKAGE_TYPE</name>
      <values>
        <string>rpm</string>
      </values>
    </hudson.matrix.TextAxis>
  </axes>
  <combinationFilter>(DISTRIBUTION==&quot;redhat-6-32&quot; &amp;&amp; CODENAME==&quot;el6&quot; &amp;&amp; ARCHITECTURE==&quot;i386&quot;) || (DISTRIBUTION==&quot;redhat-6-64&quot; &amp;&amp; CODENAME==&quot;el6&quot; &amp;&amp; ARCHITECTURE==&quot;x86_64&quot;) || (DISTRIBUTION==&quot;redhat-7-64&quot; &amp;&amp; CODENAME==&quot;el7&quot; &amp;&amp; ARCHITECTURE==&quot;x86_64&quot;)</combinationFilter>
  <builders>
    <hudson.tasks.Shell>
      <command>ssh ${ZATO_TEMP_RPM_REPO_USERNAME}@${ZATO_TEMP_RPM_REPO_HOSTNAME} &quot;mkdir -p ${ZATO_TEMP_RPM_REPO_BASE_DIR}/${REPOSITORY}${CLIENT_PATH}/${OPERATING_SYSTEM}/${CODENAME}/${ARCHITECTURE}&quot;</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>rsync -az --delete -e ssh ${ZATO_PACKAGE_LOCAL_DIR}/${DISTRIBUTION}/zato-${RELEASE_VERSION}-${PACKAGE_NUMBER}.${CODENAME}.${ARCHITECTURE}.rpm ${ZATO_TEMP_RPM_REPO_USERNAME}@${ZATO_TEMP_RPM_REPO_HOSTNAME}:${ZATO_TEMP_RPM_REPO_BASE_DIR}/${REPOSITORY}${CLIENT_PATH}/${OPERATING_SYSTEM}/${CODENAME}/${ARCHITECTURE}</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>ssh ${ZATO_TEMP_RPM_REPO_USERNAME}@${ZATO_TEMP_RPM_REPO_HOSTNAME} &quot;rpm --addsign ${ZATO_TEMP_RPM_REPO_BASE_DIR}/${REPOSITORY}${CLIENT_PATH}/${OPERATING_SYSTEM}/${CODENAME}/${ARCHITECTURE}/zato-${RELEASE_VERSION}-${PACKAGE_NUMBER}.${CODENAME}.${ARCHITECTURE}.rpm&quot;</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>ssh ${ZATO_TEMP_RPM_REPO_USERNAME}@${ZATO_TEMP_RPM_REPO_HOSTNAME} &quot;createrepo --cache ${ZATO_TEMP_RPM_REPO_BASE_DIR}/${REPOSITORY}${CLIENT_PATH}/${OPERATING_SYSTEM}/${CODENAME}/${ARCHITECTURE}/cache --update ${ZATO_TEMP_RPM_REPO_BASE_DIR}/${REPOSITORY}${CLIENT_PATH}/${OPERATING_SYSTEM}/${CODENAME}/${ARCHITECTURE}&quot;</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>mkdir -p ${ZATO_LOCAL_REPO_BASE_DIR}/${REPOSITORY}${CLIENT_PATH}/${OPERATING_SYSTEM}/${CODENAME}/${ARCHITECTURE}</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>rsync -az --delete -e ssh ${ZATO_TEMP_RPM_REPO_USERNAME}@${ZATO_TEMP_RPM_REPO_HOSTNAME}:${ZATO_TEMP_RPM_REPO_BASE_DIR}/${REPOSITORY}${CLIENT_PATH}/${OPERATING_SYSTEM}/${CODENAME}/${ARCHITECTURE}/ ${ZATO_LOCAL_REPO_BASE_DIR}/${REPOSITORY}${CLIENT_PATH}/${OPERATING_SYSTEM}/${CODENAME}/${ARCHITECTURE}</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>rsync -az --delete -e ssh ${ZATO_LOCAL_REPO_BASE_DIR}/${REPOSITORY}${CLIENT_PATH}/${OPERATING_SYSTEM}/${CODENAME}/${ARCHITECTURE}/ ${ZATO_REMOTE_REPO_USERNAME}@${ZATO_REMOTE_REPO_HOSTNAME}:${ZATO_REMOTE_REPO_BASE_DIR}/${REPOSITORY}${CLIENT_PATH}/${OPERATING_SYSTEM}</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <EnvInjectBuildWrapper plugin="envinject@1.90">
      <info>
        <propertiesContent>ZATO_PACKAGE_LOCAL_DIR=
ZATO_LOCAL_REPO_BASE_DIR=
ZATO_TEMP_RPM_REPO_BASE_DIR=
ZATO_TEMP_RPM_REPO_USERNAME=
ZATO_TEMP_RPM_REPO_HOSTNAME=</propertiesContent>
        <loadFilesFromMaster>false</loadFilesFromMaster>
      </info>
    </EnvInjectBuildWrapper>
  </buildWrappers>
  <executionStrategy class="hudson.matrix.DefaultMatrixExecutionStrategyImpl">
    <runSequentially>true</runSequentially>
  </executionStrategy>
</matrix-project>