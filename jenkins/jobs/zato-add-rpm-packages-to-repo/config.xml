<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>This job adds rpm packages to Zato repository in three steps:&#xd;
&#xd;
1. It uses &apos;rsync&apos; command to send a rpm package to remote Zato repository on CentOS.&#xd;
&#xd;
2. It signs the package.&#xd;
&#xd;
3. It uses &apos;createrepo --update&quot; command to update remote Zato repository.</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <com.cloudbees.plugins.credentials.CredentialsParameterDefinition plugin="credentials@1.18">
          <name>LOGIN_CENTOS_REPO</name>
          <description></description>
          <defaultValue>d8a9c7c2-7473-4c15-836c-7df7c5c28175</defaultValue>
          <credentialType>com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl</credentialType>
          <required>true</required>
        </com.cloudbees.plugins.credentials.CredentialsParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder plugin="conditional-buildstep@1.3.3">
      <condition class="org.jenkins_ci.plugins.run_condition.logic.Not" plugin="run-condition@1.0">
        <condition class="org.jenkins_ci.plugins.run_condition.core.StringsMatchCondition">
          <arg1>${ENV,var=&quot;CLIENT&quot;}</arg1>
          <arg2>&quot;&quot;</arg2>
          <ignoreCase>false</ignoreCase>
        </condition>
      </condition>
      <buildStep class="jenkins.plugins.publish_over_ssh.BapSshBuilderPlugin" plugin="publish-over-ssh@1.12">
        <delegate>
          <consolePrefix>SSH: </consolePrefix>
          <delegate>
            <publishers>
              <jenkins.plugins.publish__over__ssh.BapSshPublisher>
                <configName>Centos 6 Zato repo</configName>
                <verbose>true</verbose>
                <transfers>
                  <jenkins.plugins.publish__over__ssh.BapSshTransfer>
                    <remoteDirectory></remoteDirectory>
                    <sourceFiles></sourceFiles>
                    <excludes></excludes>
                    <removePrefix></removePrefix>
                    <remoteDirectorySDF>false</remoteDirectorySDF>
                    <flatten>false</flatten>
                    <cleanRemote>false</cleanRemote>
                    <noDefaultExcludes>false</noDefaultExcludes>
                    <makeEmptyDirs>false</makeEmptyDirs>
                    <patternSeparator>[, ]+</patternSeparator>
                    <execCommand>if [ ! -d &quot;$ZATO_REMOTE_REPO_BASE_DIR/u$CLIENT_PATH&quot; ]; then
    echo &quot;Creating directory for client $CLIENT&quot;;
    mkdir &quot;$ZATO_REMOTE_REPO_BASE_DIR/u$CLIENT_PATH&quot;;
else
    echo &quot;Directory $CLIENT_PATH for client $CLIENT already exists&quot;;
fi</execCommand>
                    <execTimeout>120000</execTimeout>
                    <usePty>false</usePty>
                  </jenkins.plugins.publish__over__ssh.BapSshTransfer>
                </transfers>
                <useWorkspaceInPromotion>false</useWorkspaceInPromotion>
                <usePromotionTimestamp>false</usePromotionTimestamp>
                <credentials class="jenkins.plugins.publish_over_ssh.BapSshCredentials">
                  <secretPassphrase>KmzucTx9hxn5wO2xhu5+P5ISITLQ3f0rLdHg6zOjHVc=</secretPassphrase>
                  <key></key>
                  <keyPath></keyPath>
                  <username>rafal</username>
                </credentials>
              </jenkins.plugins.publish__over__ssh.BapSshPublisher>
            </publishers>
            <continueOnError>false</continueOnError>
            <failOnError>false</failOnError>
            <alwaysPublishFromMaster>false</alwaysPublishFromMaster>
            <hostConfigurationAccess class="jenkins.plugins.publish_over_ssh.BapSshPublisherPlugin" reference="../.."/>
          </delegate>
        </delegate>
      </buildStep>
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$DontRun" plugin="run-condition@1.0"/>
    </org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
    <hudson.tasks.Shell>
      <command>rsync -az --delete -e ssh ${META_INSTALLER_PACKAGE_DIR}/${DISTRIBUTION}/zato-${RELEASE_VERSION}-${PACKAGE_NUMBER}.${CODENAME}.${ARCHITECTURE}.rpm ${ZATO_REMOTE_REPO_USERNAME}@${ZATO_REMOTE_REPO_HOSTNAME}:${ZATO_REMOTE_REPO_BASE_DIR}/${REPOSITORY}${CLIENT_PATH}/${OPERATING_SYSTEM}/${CODENAME}/${ARCHITECTURE}</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>ssh ${ZATO_REMOTE_REPO_USERNAME}@${ZATO_REMOTE_REPO_HOSTNAME} rpm --addsign ${ZATO_REMOTE_REPO_BASE_DIR}/${REPOSITORY}${CLIENT_PATH}/${OPERATING_SYSTEM}/${CODENAME}/${ARCHITECTURE}/zato-${RELEASE_VERSION}-${PACKAGE_NUMBER}.${CODENAME}.${ARCHITECTURE}.rpm</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>ssh ${ZATO_REMOTE_REPO_USERNAME}@${ZATO_REMOTE_REPO_HOSTNAME} createrepo --cache ${ZATO_REMOTE_REPO_BASE_DIR}/${REPOSITORY}${CLIENT_PATH}/${OPERATING_SYSTEM}/${CODENAME}/${ARCHITECTURE}/cache --update ${ZATO_REMOTE_REPO_BASE_DIR}/${REPOSITORY}${CLIENT_PATH}/${OPERATING_SYSTEM}/${CODENAME}/${ARCHITECTURE}</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>