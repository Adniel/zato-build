<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>This job adds rpm packages to Zato repository in the following steps:&#xd;
&#xd;
1. Create relevant repo directory at virtual machine, where Zato package will be signed and repository updated.&#xd;
&#xd;
2. Rsync local directory where Zato rpm package is stored with the repo directory on virtual machine.&#xd;
&#xd;
3. Sign the package via ssh, using &apos;rpm --addsign&apos; command.&#xd;
&#xd;
4. Execute &apos;createrepo --update&quot; command via ssh to update temporary Zato repository on virtual machine.&#xd;
&#xd;
5. Create relevant directory on local host, where temporary virtual repo will be copied to.&#xd;
&#xd;
6. Rsync temporary repo directory on virtual machine with the directory on local host.&#xd;
&#xd;
7. Create relevant directory at remote server, where official Zato repository is located&#xd;
&#xd;
8. Rsync temporary repo directory at local server with the directory at remote server. &#xd;
&#xd;
Zato rpm repository containing new Zato package is now ready to be published.</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <EnvInjectJobProperty plugin="envinject@1.90">
      <info>
        <loadFilesFromMaster>false</loadFilesFromMaster>
      </info>
      <on>true</on>
      <keepJenkinsSystemVariables>true</keepJenkinsSystemVariables>
      <keepBuildVariables>true</keepBuildVariables>
      <overrideBuildParameters>false</overrideBuildParameters>
      <contributors/>
    </EnvInjectJobProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>ssh ${ZATO_TEMP_RPM_REPO_USERNAME}@${ZATO_TEMP_RPM_REPO_HOSTNAME} &quot;mkdir -p ${ZATO_TEMP_RPM_REPO_BASE_DIR}/${REPOSITORY}${CLIENT_PATH}/${OPERATING_SYSTEM}/${CODENAME}/${ARCHITECTURE}&quot;</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>rsync -az --delete -e ssh ${ZATO_PACKAGE_LOCAL_DIR}/${DISTRIBUTION}/zato-${RELEASE_VERSION}-${PACKAGE_NUMBER}.${CODENAME}.${ARCHITECTURE}.rpm ${ZATO_TEMP_RPM_REPO_USERNAME}@${ZATO_TEMP_RPM_REPO_HOSTNAME}:${ZATO_TEMP_RPM_REPO_BASE_DIR}/${REPOSITORY}${CLIENT_PATH}/${OPERATING_SYSTEM}/${CODENAME}/${ARCHITECTURE}</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>ssh ${ZATO_TEMP_RPM_REPO_USERNAME}@${ZATO_TEMP_RPM_REPO_HOSTNAME} &quot;rpm --addsign ${ZATO_TEMP_RPM_REPO_BASE_DIR}/${REPOSITORY}${CLIENT_PATH}/${OPERATING_SYSTEM}/${CODENAME}/${ARCHITECTURE}/zato-${RELEASE_VERSION}-${PACKAGE_NUMBER}.${CODENAME}.${ARCHITECTURE}.rpm&quot;</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>ssh ${ZATO_TEMP_RPM_REPO_USERNAME}@${ZATO_TEMP_RPM_REPO_HOSTNAME} &quot;createrepo --cache ${ZATO_TEMP_RPM_REPO_BASE_DIR}/${REPOSITORY}${CLIENT_PATH}/${OPERATING_SYSTEM}/${CODENAME}/${ARCHITECTURE}/cache --update ${ZATO_TEMP_RPM_REPO_BASE_DIR}/${REPOSITORY}${CLIENT_PATH}/${OPERATING_SYSTEM}/${CODENAME}/${ARCHITECTURE}&quot;</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>mkdir -p ${ZATO_LOCAL_REPO_BASE_DIR}/${REPOSITORY}${CLIENT_PATH}/${OPERATING_SYSTEM}/${CODENAME}/${ARCHITECTURE}</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>rsync -az --delete -e ssh ${ZATO_TEMP_RPM_REPO_USERNAME}@${ZATO_TEMP_RPM_REPO_HOSTNAME}:${ZATO_TEMP_RPM_REPO_BASE_DIR}/${REPOSITORY}${CLIENT_PATH}/${OPERATING_SYSTEM}/${CODENAME}/${ARCHITECTURE}/ ${ZATO_LOCAL_REPO_BASE_DIR}/${REPOSITORY}${CLIENT_PATH}/${OPERATING_SYSTEM}/${CODENAME}/${ARCHITECTURE}</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>ssh ${ZATO_REMOTE_REPO_USERNAME}@${ZATO_REMOTE_REPO_HOSTNAME} &quot;mkdir -p ${ZATO_REMOTE_REPO_BASE_DIR}/${REPOSITORY}${CLIENT_PATH}/${OPERATING_SYSTEM}/${CODENAME}/${ARCHITECTURE}&quot;</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>rsync -az --delete -e ssh ${ZATO_LOCAL_REPO_BASE_DIR}/${REPOSITORY}${CLIENT_PATH}/${OPERATING_SYSTEM}/${CODENAME}/${ARCHITECTURE}/ ${ZATO_REMOTE_REPO_USERNAME}@${ZATO_REMOTE_REPO_HOSTNAME}:${ZATO_REMOTE_REPO_BASE_DIR}/${REPOSITORY}${CLIENT_PATH}/${OPERATING_SYSTEM}/${CODENAME}/${ARCHITECTURE}</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>