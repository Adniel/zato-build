---

- name: Add the packages to test the aptly repository
  shell: aptly repo add zato-{{ package['release'] }}-{{ package['codename'] }} \
    /vagrant/files/test_packages
  register: package_added

- name: Get a list of Zato packages
  shell: aptly repo search zato-{{ package['release'] }}-{{ package['codename'] }} zato
  register: zato_package_list

- name: Write the list to a file
  lineinfile: "dest=/opt/aptly/zato_package_list.txt
    line='{{ zato_package_list.stdout }}'
    create=yes
    state=present"

- name: Create a snapshot of the repository
  shell: aptly snapshot create \
    snap-zato-{{ package['release'] }}-{{ package['codename'] }}-{{ repo_datetime }} \
    from repo zato-{{ package['release'] }}-{{ package['codename'] }}
  when: package_added.changed == True
  register: snapshot_created

# Check if there is any previous repo
# on this host; this is in case this
# playbook is being run for the first time
# on a host
- name: Get a list of published repos
  shell: aptly publish list
  register: repo_list

- name: Drop the previous published repo (if it exists)
  shell: aptly publish drop {{ package['codename'] }} \
         repo/{{ package['release'] }}/2.0/{{ package['distro'] }}
  when:
    "'repo/{{ package['release'] }}/2.0/{{ package['distro'] }}/{{ package['codename'] }}' in repo_list.stdout"

- name: Publish the snapshot
  shell: aptly publish snapshot \
    snap-zato-{{ package['release'] }}-{{ package['codename'] }}-{{ repo_datetime }} \
    repo/{{ package['release'] }}/2.0/{{ package['distro'] }}
  register: snapshot_published
  when: snapshot_created.changed == True

- name: Copy published repo to /var/www/repo directory
  shell: cp -r /opt/aptly/.aptly/public/repo/{{ package['release'] }}/2.0/{{ package['distro'] }} \
    /var/www/repo/{{ package['release'] }}/2.0/
  become_user: root
  when: snapshot_published.changed == True
