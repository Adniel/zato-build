---

- include_vars: ../vars/build_parameters.yml

- name: create directory to store tests
  file: path=/opt/zato/tests owner=zato group=zato state=directory
  sudo_user: zato

- name: create files to store test outputs
  file: path=/opt/zato/tests/{{ item }} owner=zato group=zato state=touch
  sudo_user: zato
  with_items:
    - ping-lb
    - check-lb-alive
    - ping-server1
    - ping-server2
    - run-tests
    - info_lb
    - info_server1
    - info_server2
    - info_wa

- name: ping load balancer
  raw: curl localhost:11223/zato/ping | tee /opt/zato/tests/ping-lb
  sudo_user: zato

- name: Pause for 20 seconds to make sure all components are up and working
  pause: seconds=20

- name: check if load balancer is alive
  raw: curl -v localhost:11223/zato-lb-alive | tee /opt/zato/tests/check-lb-alive
  sudo_user: zato

- name: ping server1
  raw: curl -v localhost:17010/zato/ping | tee /opt/zato/tests/ping-server1
  sudo_user: zato

- name: ping server2
  raw: curl -v localhost:17011/zato/ping | tee /opt/zato/tests/ping-server2
  sudo_user: zato

- name: Get info on load balancer on Debian-based systems
  shell: /opt/zato/{{ release_version }}/bin/zato info --format json load-balancer 2>&1 | tee /opt/zato/tests/info_lb chdir=/opt/zato/env/qs-1
  sudo_user: zato
  when: ansible_os_family == "Debian"

- name: Get info on server1 on Debian-based systems
  shell: /opt/zato/{{ release_version }}/bin/zato info --format json server1 2>&1 | tee /opt/zato/tests/info_server1 chdir=/opt/zato/env/qs-1
  sudo_user: zato
  when: ansible_os_family == "Debian"

- name: Get info on server2 on Debian-based systems
  shell: /opt/zato/{{ release_version }}/bin/zato info --format json server2 2>&1 | tee /opt/zato/tests/info_server2 chdir=/opt/zato/env/qs-1
  sudo_user: zato
  when: ansible_os_family == "Debian"

- name: Get info on web admin on Debian-based systems
  shell: /opt/zato/{{ release_version }}/bin/zato info --format json web-admin 2>&1 | tee /opt/zato/tests/info_wa chdir=/opt/zato/env/qs-1
  sudo_user: zato
  when: ansible_os_family == "Debian"

- name: Get info on load balancer on RHEL-based systems
  shell: /opt/zato/{{ release_version }}/code/bin/zato info --format json load-balancer 2>&1 | tee /opt/zato/tests/info_lb chdir=/opt/zato/env/qs-1
  sudo_user: zato
  when: ansible_distribution == "CentOS"

- name: Get info on server1 on RHEL-based systems
  shell: /opt/zato/{{ release_version }}/code/bin/zato info --format json server1 2>&1 | tee /opt/zato/tests/info_server1 chdir=/opt/zato/env/qs-1
  sudo_user: zato
  when: ansible_distribution == "CentOS"

- name: Get info on server2 on RHEL-based systems
  shell: /opt/zato/{{ release_version }}/code/bin/zato info --format json server2 2>&1 | tee /opt/zato/tests/info_server2 chdir=/opt/zato/env/qs-1
  sudo_user: zato
  when: ansible_distribution == "CentOS"

- name: Get info on web admin on RHEL-based systems
  shell: /opt/zato/{{ release_version }}/code/bin/zato info --format json web-admin 2>&1 | tee /opt/zato/tests/info_wa chdir=/opt/zato/env/qs-1
  sudo_user: zato
  when: ansible_distribution == "CentOS"

- name: run apitests on Debian-based systems
  shell: bin/py run-tests.py all 2>&1 | tee /opt/zato/tests/run-tests chdir=/opt/zato/{{ release_version }}
  sudo_user: zato
  when: ansible_os_family == "Debian"

- name: run apitests on RHEL-based systems
  shell: bin/py run-tests.py all 2>&1 | tee /opt/zato/tests/run-tests chdir=/opt/zato/{{ release_version }}/code
  sudo_user: zato
  when: ansible_distribution == "CentOS"

- name: copy test results to vagrant directory
  raw: cp -r /opt/zato/tests /vagrant
  sudo_user: vagrant
