---

- name: Get snapshot list
  shell: aptly snapshot list -raw -sort='time'
  register: snap_list

- name: Get package list
  shell: aptly repo search \
    zato-{{ package['release'] }}-{{ package['codename'] }} \
    zato_{{ package['version'] }}-{{ package['release'] }}-{{ package['codename'] }}_{{ package['arch'] }}
  register: pack_list
  ignore_errors: true

- name: Add the package to aptly repository
  shell: aptly repo add zato-{{ package['release'] }}-{{ package['codename'] }} \
    /opt/aptly/incoming/{{ package['distro'] }}/{{ package['codename'] }}/zato-{{ package['version'] }}-{{ package['release'] }}_{{ package['arch'] }}-{{ package['codename'] }}.{{ package['format'] }}
  when:
    "'zato_{{ package['version'] }}-{{ package['release'] }}-{{ package['codename'] }}_{{ package['arch'] }}' not in pack_list.stdout"

- name: Create a snapshot of a repo
  shell: aptly snapshot create \
    snap-zato-{{ package['release'] }}-{{ package['codename'] }}-{{ repo_datetime }} \
    from repo zato-{{ package['release'] }}-{{ package['codename'] }}

- name: Publish the snapshot
  shell: aptly publish snapshot \
    snap-zato-{{ package['release'] }}-{{ package['codename'] }}-{{ repo_datetime }} \
    repo/{{ package['release'] }}/2.0/{{ package['distro'] }}

- name: Switch to the snapshot
  shell: aptly publish switch \
    {{ package['codename'] }} \
    repo/{{ package['release'] }}/2.0/{{ package['distro'] }} \
    snap-zato-{{ package['release'] }}-{{ package['codename'] }}-{{ repo_datetime }}

- name: Copy published repo to /var/www/repo directory
  shell: cp -r \
    /opt/aptly/.aptly/public/repo/{{ package['release'] }}/2.0/{{ package['distro'] }}/ \
    /var/www/repo/{{ package['release'] }}/2.0/
  become_user: root
