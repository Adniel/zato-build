---

- hosts: zato-components, zato-odb
  become: True
  vars:
    ansible_host: "{{ hostvars[inventory_hostname]['ip'] }}"

  roles:

    - install_zato_dependencies
    - { role: prepare_install_zato, when: repo.host == "repo-box-ubuntu" or
        repo.host == "repo-box-centos" }
    - { role: prepare_install_zatoio, when: repo.host == "zato.io"  }
    - install_zato

- hosts: redis-ha
  become: True
  vars:
    ansible_host: "{{ hostvars[inventory_hostname]['ip'] }}"

  roles:

    - install_redis
    - configure_redis_ha

- hosts: zato-odb
  become: True
  vars:
    ansible_host: "{{ hostvars[inventory_hostname]['ip'] }}"
    odb_type: "{{ odb_type }}"

  roles:

    - install_{{ odb_type }}
    - configure_{{ odb_type }}
    - create_zato_odb
    - create_zato_cluster

- hosts: localhost

  roles:

    - generate_ca

- hosts: zato-lb
  become: True
  vars:
    ansible_host: "{{ hostvars[inventory_hostname]['ip'] }}"

  roles:

    - create_zato_lb

- hosts: zato-wa
  become: True
  vars:
    ansible_host: "{{ hostvars[inventory_hostname]['ip'] }}"

  roles:

    - create_zato_wa
    - create_zato_server

- hosts: zato-server1
  become: True
  vars:
    ansible_host: "{{ hostvars[inventory_hostname]['ip'] }}"

  roles:

    - create_zato_server

- hosts: zato-components
  become: True
  vars:
    ansible_host: "{{ hostvars[inventory_hostname]['ip'] }}"
    servers: "{{ hostvars[inventory_hostname]['groups']['zato-servers'] }}"
    first_server: "{{ hostvars[inventory_hostname]['groups']['zato-servers'][0] }}"

  roles:

    - configure_zato_distributed
